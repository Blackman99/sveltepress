// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`shiki > twoslash svelte hover 1`] = `
[
  {
    "character": 11,
    "docs": "The \`onMount\` function schedules a callback to run as soon as the component has been mounted to the DOM.
It must be called during the component's initialisation (but doesn't need to live *inside* the component;
it can be called from an external module).

If a function is returned _synchronously_ from \`onMount\`, it will be called when the component is unmounted.

\`onMount\` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).",
    "length": 7,
    "line": 1,
    "start": 20,
    "tags": undefined,
    "target": "onMount",
    "text": "(alias) function onMount<T>(fn: () => NotFunction<T> | Promise<NotFunction<T>> | (() => any)): void
import onMount",
    "type": "hover",
  },
  {
    "character": 8,
    "docs": undefined,
    "length": 7,
    "line": 3,
    "start": 53,
    "tags": undefined,
    "target": "message",
    "text": "let message: any",
    "type": "hover",
  },
  {
    "character": 30,
    "docs": "Declares the props that a component accepts. Example:

\`\`\`ts
let { optionalProp = 42, requiredProp, bindableProp = $bindable() }: { optionalProp?: number; requiredProps: string; bindableProp: boolean } = $props();
\`\`\`

https://svelte.dev/docs/svelte/$props",
    "length": 6,
    "line": 3,
    "start": 75,
    "tags": undefined,
    "target": "$props",
    "text": "function $props(): any",
    "type": "hover",
  },
  {
    "character": 6,
    "docs": undefined,
    "length": 5,
    "line": 5,
    "start": 91,
    "tags": undefined,
    "target": "count",
    "text": "let count: number",
    "type": "hover",
  },
  {
    "character": 14,
    "docs": "Declares reactive state.

Example:
\`\`\`ts
let count = $state(0);
\`\`\`

https://svelte.dev/docs/svelte/$state",
    "length": 6,
    "line": 5,
    "start": 99,
    "tags": [
      [
        "param",
        "initial The initial value",
      ],
    ],
    "target": "$state",
    "text": "function $state<0>(initial: 0): 0 (+1 overload)
namespace $state",
    "type": "hover",
  },
  {
    "character": 2,
    "docs": "The \`onMount\` function schedules a callback to run as soon as the component has been mounted to the DOM.
It must be called during the component's initialisation (but doesn't need to live *inside* the component;
it can be called from an external module).

If a function is returned _synchronously_ from \`onMount\`, it will be called when the component is unmounted.

\`onMount\` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).",
    "length": 7,
    "line": 7,
    "start": 112,
    "tags": undefined,
    "target": "onMount",
    "text": "(alias) onMount<void>(fn: () => void | (() => any) | Promise<void>): void
import onMount",
    "type": "hover",
  },
  {
    "character": 4,
    "docs": undefined,
    "length": 7,
    "line": 8,
    "start": 132,
    "tags": undefined,
    "target": "console",
    "text": "var console: Console",
    "type": "hover",
  },
  {
    "character": 12,
    "docs": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static)",
    "length": 3,
    "line": 8,
    "start": 140,
    "tags": undefined,
    "target": "log",
    "text": "(method) Console.log(...data: any[]): void",
    "type": "hover",
  },
  {
    "character": 23,
    "docs": undefined,
    "length": 5,
    "line": 12,
    "start": 192,
    "tags": undefined,
    "target": "count",
    "text": "let count: number",
    "type": "hover",
  },
  {
    "character": 13,
    "docs": undefined,
    "length": 5,
    "line": 13,
    "start": 215,
    "tags": undefined,
    "target": "count",
    "text": "let count: number",
    "type": "hover",
  },
  {
    "character": 10,
    "docs": undefined,
    "length": 7,
    "line": 16,
    "start": 263,
    "tags": undefined,
    "target": "message",
    "text": "let message: any",
    "type": "hover",
  },
]
`;
